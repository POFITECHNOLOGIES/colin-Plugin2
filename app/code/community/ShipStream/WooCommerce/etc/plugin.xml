<?xml version="1.0" encoding="utf-8"?>
<plugin>
    <ShipStream_WooCommerce>
        <info>
            <name>WooCommerce</name>
            <author>ShipStream, LLC</author>
            <license>
                <name>OSL 3.0</name>
                <url>http://opensource.org/licenses/osl-3.0.php</url>
            </license>
            <description><![CDATA[
                Sync orders, inventory, and tracking information with WooCommerce.
                <p>
                <b>Requires the <a href="https://github.com/ShipStream/woocommerce-shipstream-sync" target="_blank">ShipStream Sync</a> extension!</b>
                </p>
            ]]></description>
        </info>
        <actions>
            <sync_inventory>
                <label>Sync Inventory</label>
                <comment>Trigger inventory sync (pull from WooCommerce).</comment>
            </sync_inventory>
            <sync_orders>
                <label>Sync Orders</label>
                <comment>Synchronize orders since the configured "Sync Orders Since" date.</comment>
            </sync_orders>
        </actions>
        <routes>
            <inventoryWithLock>inventoryWithLock</inventoryWithLock>
            <unlockOrderImport>unlockOrderImport</unlockOrderImport>
            <syncOrder>syncOrder</syncOrder>
        </routes>
        <config>
            <api_url translate="label comment" module="plugin">
                <label>REST API URL</label>
                <type>url</type>
                <sort_order>10</sort_order>
                <required>1</required>
                <comment><![CDATA[<strong>Example:</strong> https://storename.com/wp-json/wc/v3/]]></comment>
            </api_url>
            <api_login translate="label comment" module="plugin">
                <label>REST API User Name</label>
                <type>text</type>
                <sort_order>20</sort_order>
                <required>1</required>
            </api_login>
            <api_password translate="label" module="plugin">
                <label>REST API Key</label>
                <type>obscure</type>
                <sort_order>30</sort_order>
                <required>1</required>
            </api_password>
            <auto_fulfill_status>
                <label>Auto-Fulfill Order Status</label>
                <type>select</type>
                <source>[{"label":"","value":""},{"label":"Disabled","value":"-"},{"label":"Processing","value":"processing"},{"label":"Ready to Ship","value":"ready_to_ship"},{"label":"Custom (advanced)","value":"custom"}]</source>
                <comment><![CDATA[
                Orders in this status will be automatically imported. Upon successful import the order status is advanced to 'Submitted'.
                Choosing 'Ready to Ship' will require a user or some custom automation process to advance the order to 'Ready to Ship' status before it can be imported.
                ]]></comment>
                <sort_order>40</sort_order>
                <required>1</required>
            </auto_fulfill_status>
            <auto_fulfill_custom>
                <label>Custom Auto-Fulfill Statuses</label>
                <type>text</type>
                <comment><![CDATA[
                This option only has an effect if "Custom (advanced)" is chosen above.<br/>
                Specify a comma-separated list of order status <b>codes</b> for which orders should be automatically fulfilled.<br/>
                Example: <i>processing,ready_to_ship</i>
                ]]></comment>
                <sort_order>50</sort_order>
            </auto_fulfill_custom>
            <shipping_method_config>
                <label>Shipping Method Translation</label>
                <type>custom</type>
                <class>ShipStream_WooCommerce_ShippingMethodConfig</class>
                <sort_order>60</sort_order>
                <comment><![CDATA[
                Translate the WooCommerce Shipping Method (code) or Shipping Description (title) to the indicated shipping method.
                Rules are evaluated from top to bottom and the first match will "win".
                The WooCommerce-supported methods for FedEx, UPS, and USPS do not require translation if there is
                a simple one-to-one relationship.
                ]]></comment>
            </shipping_method_config>
            <filter_script>
                <label>Order Transform Script</label>
                <type>ace</type>
                <comment><![CDATA[JavaScript for modifying order's data before the order creation.]]></comment>
                <sort_order>70</sort_order>
            </filter_script>
            <sync_orders_since>
                <label>Sync Orders Since</label>
                <type>date</type>
                <sort_order>80</sort_order>
                <comment><![CDATA[
                Required only to use the 'Sync Orders' button.
                ]]></comment>
            </sync_orders_since>
        </config>
        <crontab>
            <every_ten_minutes>
                <sync_orders>syncOrders</sync_orders>
            </every_ten_minutes>
        </crontab>
    </ShipStream_WooCommerce>
</plugin>
